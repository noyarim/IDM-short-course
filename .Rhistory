output <- ode(y = state, times = times, func = model, parms = pars)
#7. Analyze and visualize model output
output <- as.data.frame(output) #this puts output into an easy-to-manipulate format
plot(output$Active)
pars <- c("die_tb"=0.15, #TB mortality rate - approximately equals case fatality ratio
"die"=1/63, #background mortality rate - equal to 1 over life expectancy
"beta"=4.5, #effective contact rate (also known as transmission rate) - rate of infection among susceptibles per person with active TB
"progress_early"=0.1, #annual rate of progression from early latent to active
"progress_late"=0.001, #annual rate of progression from late latent to active
"stabilization"=1/5, #rate of transition from early to late latent - 1 over duration of early latent
"protection"=0.75, #relative risk of reinfection (from late latent or recovered) vs. primary infection
"cure_tx"=0.7, #treatment rate - approximately equals product of case detection ratio and treatment success ratio
"cure_sp"=0.1 #spontaneous resolution rate
)
#5. Also define the model timestep and number of timesteps to run
#If we wanted annual output, use a timestep of 1
#If we wanted monthly output, use a timestep of 1/12, etc.
times <- seq(0, 500, by = 1) #runs the model for 200 years, computes monthly output
#200 years is a long time, but we need our model to reach a steady state before we start simulating interventions
#6. Run the model
output <- ode(y = state, times = times, func = model, parms = pars)
#7. Analyze and visualize model output
output <- as.data.frame(output) #this puts output into an easy-to-manipulate format
plot(output$Active)
View(output)
pars <- c("die_tb"=0.15, #TB mortality rate - approximately equals case fatality ratio
"die"=1/63, #background mortality rate - equal to 1 over life expectancy
"beta"=5, #effective contact rate (also known as transmission rate) - rate of infection among susceptibles per person with active TB
"progress_early"=0.1, #annual rate of progression from early latent to active
"progress_late"=0.001, #annual rate of progression from late latent to active
"stabilization"=1/5, #rate of transition from early to late latent - 1 over duration of early latent
"protection"=0.5, #relative risk of reinfection (from late latent or recovered) vs. primary infection
"cure_tx"=0.7, #treatment rate - approximately equals product of case detection ratio and treatment success ratio
"cure_sp"=0.1 #spontaneous resolution rate
)
#5. Also define the model timestep and number of timesteps to run
#If we wanted annual output, use a timestep of 1
#If we wanted monthly output, use a timestep of 1/12, etc.
times <- seq(0, 500, by = 1) #runs the model for 200 years, computes monthly output
#200 years is a long time, but we need our model to reach a steady state before we start simulating interventions
#6. Run the model
output <- ode(y = state, times = times, func = model, parms = pars)
#7. Analyze and visualize model output
output <- as.data.frame(output) #this puts output into an easy-to-manipulate format
plot(output$Active)
View(output)
pars <- c("die_tb"=0.15, #TB mortality rate - approximately equals case fatality ratio
"die"=1/63, #background mortality rate - equal to 1 over life expectancy
"beta"=4.5, #effective contact rate (also known as transmission rate) - rate of infection among susceptibles per person with active TB
"progress_early"=0.1, #annual rate of progression from early latent to active
"progress_late"=0.001, #annual rate of progression from late latent to active
"stabilization"=1/5, #rate of transition from early to late latent - 1 over duration of early latent
"protection"=0.5, #relative risk of reinfection (from late latent or recovered) vs. primary infection
"cure_tx"=0.7, #treatment rate - approximately equals product of case detection ratio and treatment success ratio
"cure_sp"=0.1 #spontaneous resolution rate
)
#5. Also define the model timestep and number of timesteps to run
#If we wanted annual output, use a timestep of 1
#If we wanted monthly output, use a timestep of 1/12, etc.
times <- seq(0, 500, by = 1) #runs the model for 200 years, computes monthly output
#200 years is a long time, but we need our model to reach a steady state before we start simulating interventions
#6. Run the model
output <- ode(y = state, times = times, func = model, parms = pars)
#7. Analyze and visualize model output
output <- as.data.frame(output) #this puts output into an easy-to-manipulate format
plot(output$Active)
View(output)
#1. Load packages
#if you are installing packages for the first time (only run once):
#install.packages(c("deSolve", "tidyverse"))
#if you've already installed the packages:
library(deSolve) #differential equation solver
#2. Define a TB model function
model <- function(t, state, pars) {
with(as.list(c(state, pars)), {
#calculate rates of change in and out of each state - initiate these rates of change at 0
d_U <- 0 #uninfected
d_LTBI_early <- 0 #early latent infection
d_LTBI_late <- 0 #late latent infection
d_Active <- 0 #active disease
d_R <- 0 #recovered (from treatment or spontaneous resolution)
#also calculate total population size
N <- U + LTBI_early + LTBI_late + Active + R
#deaths (background/non-TB mortality and TB-specific mortality)
d_U <- d_U - die*U
d_LTBI_early <- d_LTBI_early - die*LTBI_early
d_LTBI_late <- d_LTBI_late - die*LTBI_late
d_Active <- d_Active - die*Active - die_tb*Active #active die of TB and non-TB causes
d_R <- d_R - die*R
#births = sum of deaths (to keep total population size the same)
births <- die_tb*Active + die*N
d_U <- d_U + births
#new infections (uninfected to early latent)
d_U <- d_U - beta*Active*U/N
d_LTBI_early <- d_LTBI_early + beta*Active*U/N
#progression/reactivation (latent to active)
d_LTBI_early <- d_LTBI_early - progress_early*LTBI_early
d_LTBI_late <- d_LTBI_late - progress_late*LTBI_late
d_Active <- d_Active + progress_early*LTBI_early + progress_late*LTBI_late
#stabilization (early latent to late latent)
d_LTBI_early <- d_LTBI_early - stabilization*LTBI_early
d_LTBI_late <- d_LTBI_late + stabilization*LTBI_early
#reinfection (late latent or recovered to early latent)
d_LTBI_late <- d_LTBI_late - beta*protection*Active*LTBI_late/N
d_R <- d_R - beta*protection*Active*R/N
d_LTBI_early <- d_LTBI_early + beta*protection*Active*(LTBI_late + R)/N
#cures (active to recovered)
d_R <- d_R + cure_tx*Active + cure_sp*Active #cures from treatment and from spontaneous resolution
d_Active <- d_Active - cure_tx*Active - cure_sp*Active
#also track other outcomes of interest in the model: incidence and treated cases; deaths
#these outcomes will be modeled as cumulative (because there are no transitions out of these compartments)
treatments <- cure_tx*Active
incidence <- progress_early*LTBI_early + progress_late*LTBI_late
tb_deaths <- die_tb*Active
#create a vector of rates of change. IMPORTANT: this must be in the same order as the "state" vector
d_y <- c(d_U, d_LTBI_early, d_LTBI_late, d_Active, d_R, treatments, incidence, tb_deaths)
output <- list(d_y) #return this vector as a list
return(output)
})
}
#3. Define starting compartment sizes (as a vector)
# Make sure this is ordered the same as the rates of change vector in the "model" function (part 2 above)
state <- c("U"=999,
"LTBI_early"=0,
"LTBI_late"=0,
"Active"=1,
"R"=0,
"cum_cases"=0,
"cum_treatments"=0,
"cum_tb_deaths"=0)
#4. Define model parameters (as a list or vector) - all as annual rates
# Eventually we will calibrate most of these parameters
# For now, we'll use placeholder values
pars <- c("die_tb"=0.15, #TB mortality rate - approximately equals case fatality ratio
"die"=1/63, #background mortality rate - equal to 1 over life expectancy
"beta"=4.5, #effective contact rate (also known as transmission rate) - rate of infection among susceptibles per person with active TB
"progress_early"=0.1, #annual rate of progression from early latent to active
"progress_late"=0.001, #annual rate of progression from late latent to active
"stabilization"=1/5, #rate of transition from early to late latent - 1 over duration of early latent
"protection"=0.5, #relative risk of reinfection (from late latent or recovered) vs. primary infection
"cure_tx"=0.7, #treatment rate - approximately equals product of case detection ratio and treatment success ratio
"cure_sp"=0.1 #spontaneous resolution rate
)
#5. Also define the model timestep and number of timesteps to run
#If we wanted annual output, use a timestep of 1
#If we wanted monthly output, use a timestep of 1/12, etc.
times <- seq(0, 500, by = 1) #runs the model for 200 years, computes monthly output
#200 years is a long time, but we need our model to reach a steady state before we start simulating interventions
#6. Run the model
output <- ode(y = state, times = times, func = model, parms = pars)
#7. Analyze and visualize model output
output <- as.data.frame(output) #this puts output into an easy-to-manipulate format
plot(output$Active)
cases <- output$cum_cases - lag(output$cum_cases, 1)
cases
incidence <- c(0, output$cum_cases[2:501] - output$cum_cases[1:500])
incidence <- c(0, output$cum_cases[2:501] - output$cum_cases[1:500])
treatments <- c(0, output$cum_treatments[2:501] - output$cum_treatments[1:500])
tb_deaths <- c(0, output$cum_tb_deaths[2:501] - output$cum_tb_deaths[1:500])
plot(incidence)
plot(incidence*100000/1000)
plot(treatments*100000/1000)
plot(incidence*100000/1000)
plot(tb_deaths*100000/1000)
tail(output)
tail(output$Active/treatments)
pars <- c("die_tb"=0.15, #TB mortality rate - approximately equals case fatality ratio
"die"=1/63, #background mortality rate - equal to 1 over life expectancy
"beta"=4.5, #effective contact rate (also known as transmission rate) - rate of infection among susceptibles per person with active TB
"progress_early"=0.1, #annual rate of progression from early latent to active
"progress_late"=0.001, #annual rate of progression from late latent to active
"stabilization"=1/5, #rate of transition from early to late latent - 1 over duration of early latent
"protection"=0.5, #relative risk of reinfection (from late latent or recovered) vs. primary infection
"cure_tx"=0.7, #treatment rate - approximately equals product of case detection ratio and treatment success ratio
"cure_sp"=0.1 #spontaneous resolution rate
)
#5. Also define the model timestep and number of timesteps to run
#If we wanted annual output, use a timestep of 1
#If we wanted monthly output, use a timestep of 1/12, etc.
times <- seq(0, 500, by = 1) #runs the model for 500 years, computes annual output
#500 years is a long time, but we need our model to reach a steady state before we start simulating interventions
#6. Run the model
output <- ode(y = state, times = times, func = model, parms = pars)
#7. Analyze and visualize model output
output <- as.data.frame(output) #this puts output into an easy-to-manipulate format
View(output)
tail(output)
plot(output$Active)
incidence <- c(0, output$cum_cases[2:501] - output$cum_cases[1:500])
treatments <- c(0, output$cum_treatments[2:501] - output$cum_treatments[1:500])
tb_deaths <- c(0, output$cum_tb_deaths[2:501] - output$cum_tb_deaths[1:500])
plot(incidence*100000/1000)
plot(treatments*100000/1000)
plot(tb_deaths*100000/1000)
tail(incidence)
tail(incidence*100)
tail(tb_deaths*100)
tail(output$Active*100)
tail(output$LTBI_early + output$LTBI_late + output$R)
tail(output$LTBI_early + output$LTBI_late + output$R)/1000
pars
pars[["progress_early"]] <- 0.05
output <- ode(y = state, times = times, func = model, parms = pars)
#7. Analyze and visualize model output
output <- as.data.frame(output) #this puts output into an easy-to-manipulate format
#View(output)
tail(output)
plot(output$Active)
incidence <- c(0, output$cum_cases[2:501] - output$cum_cases[1:500])
treatments <- c(0, output$cum_treatments[2:501] - output$cum_treatments[1:500])
tb_deaths <- c(0, output$cum_tb_deaths[2:501] - output$cum_tb_deaths[1:500])
pars[["progress_early"]] <- 0.15
output <- ode(y = state, times = times, func = model, parms = pars)
#7. Analyze and visualize model output
output <- as.data.frame(output) #this puts output into an easy-to-manipulate format
#View(output)
tail(output)
plot(output$Active)
incidence <- c(0, output$cum_cases[2:501] - output$cum_cases[1:500])
treatments <- c(0, output$cum_treatments[2:501] - output$cum_treatments[1:500])
tb_deaths <- c(0, output$cum_tb_deaths[2:501] - output$cum_tb_deaths[1:500])
tail(incidence*100)
tail(incidence*100)
tail(tb_deaths*100)
tail(output$Active*100)
tail(output$LTBI_early + output$LTBI_late + output$R)/1000
pars[["progress_early"]] <- 0.1
pars[["progress_late"]] <- 0.005
times <- seq(0, 500, by = 1) #runs the model for 500 years, computes annual output
#500 years is a long time, but we need our model to reach a steady state before we start simulating interventions
#6. Run the model
output <- ode(y = state, times = times, func = model, parms = pars)
#7. Analyze and visualize model output
output <- as.data.frame(output) #this puts output into an easy-to-manipulate format
#View(output)
tail(output)
plot(output$Active)
incidence <- c(0, output$cum_cases[2:501] - output$cum_cases[1:500])
treatments <- c(0, output$cum_treatments[2:501] - output$cum_treatments[1:500])
tb_deaths <- c(0, output$cum_tb_deaths[2:501] - output$cum_tb_deaths[1:500])
plot(incidence*100000/1000)
plot(treatments*100000/1000)
plot(tb_deaths*100000/1000)
tail(incidence*100)
tail(tb_deaths*100)
tail(output$Active*100)
tail(output$LTBI_early + output$LTBI_late + output$R)/1000
pars <- c("die_tb"=0.15, #TB mortality rate - approximately equals case fatality ratio
"die"=1/63, #background mortality rate - equal to 1 over life expectancy
"beta"=4.5, #effective contact rate (also known as transmission rate) - rate of infection among susceptibles per person with active TB
"progress_early"=0.1, #annual rate of progression from early latent to active
"progress_late"=0.001, #annual rate of progression from late latent to active
"stabilization"=1/5, #rate of transition from early to late latent - 1 over duration of early latent
"protection"=0.5, #relative risk of reinfection (from late latent or recovered) vs. primary infection
"cure_tx"=0.7, #treatment rate - approximately equals product of case detection ratio and treatment success ratio
"cure_sp"=0.1 #spontaneous resolution rate
)
#5. Also define the model timestep and number of timesteps to run
#If we wanted annual output, use a timestep of 1
#If we wanted monthly output, use a timestep of 1/12, etc.
times <- seq(0, 500, by = 1) #runs the model for 500 years, computes annual output
#500 years is a long time, but we need our model to reach a steady state before we start simulating interventions
#6. Run the model
output <- ode(y = state, times = times, func = model, parms = pars)
#7. Analyze and visualize model output
output <- as.data.frame(output) #this puts output into an easy-to-manipulate format
#View(output)
tail(output)
plot(output$Active)
incidence <- c(0, output$cum_cases[2:501] - output$cum_cases[1:500])
treatments <- c(0, output$cum_treatments[2:501] - output$cum_treatments[1:500])
tb_deaths <- c(0, output$cum_tb_deaths[2:501] - output$cum_tb_deaths[1:500])
plot(incidence*100000/1000)
plot(treatments*100000/1000)
plot(tb_deaths*100000/1000)
tail(incidence*100)
tail(tb_deaths*100)
tail(output$Active*100)
tail(output$LTBI_early + output$LTBI_late + output$R)/1000
pars[["progress_early"]] <- 0.08
output <- ode(y = state, times = times, func = model, parms = pars)
#7. Analyze and visualize model output
output <- as.data.frame(output) #this puts output into an easy-to-manipulate format
#View(output)
tail(output)
plot(output$Active)
incidence <- c(0, output$cum_cases[2:501] - output$cum_cases[1:500])
treatments <- c(0, output$cum_treatments[2:501] - output$cum_treatments[1:500])
tb_deaths <- c(0, output$cum_tb_deaths[2:501] - output$cum_tb_deaths[1:500])
plot(incidence*100000/1000)
plot(treatments*100000/1000)
plot(tb_deaths*100000/1000)
tail(incidence*100)
tail(tb_deaths*100)
tail(output$Active*100)
tail(output$LTBI_early + output$LTBI_late + output$R)/1000
#4. Define model parameters (as a list or vector) - all as annual rates
# Eventually we will calibrate most of these parameters
# For now, we'll use placeholder values
pars <- c("die_tb"=0.15, #TB mortality rate - approximately equals case fatality ratio
"die"=1/63, #background mortality rate - equal to 1 over life expectancy
"beta"=4.5, #effective contact rate (also known as transmission rate) - rate of infection among susceptibles per person with active TB
"progress_early"=0.1, #annual rate of progression from early latent to active
"progress_late"=0.001, #annual rate of progression from late latent to active
"stabilization"=1/5, #rate of transition from early to late latent - 1 over duration of early latent
"protection"=0.5, #relative risk of reinfection (from late latent or recovered) vs. primary infection
"cure_tx"=0.7, #treatment rate - approximately equals product of case detection ratio and treatment success ratio
"cure_sp"=0.1 #spontaneous resolution rate
)
pars[["stabilization"]] <- 1/4
times <- seq(0, 500, by = 1) #runs the model for 500 years, computes annual output
#500 years is a long time, but we need our model to reach a steady state before we start simulating interventions
#6. Run the model
output <- ode(y = state, times = times, func = model, parms = pars)
#7. Analyze and visualize model output
output <- as.data.frame(output) #this puts output into an easy-to-manipulate format
#View(output)
tail(output)
plot(output$Active)
incidence <- c(0, output$cum_cases[2:501] - output$cum_cases[1:500])
treatments <- c(0, output$cum_treatments[2:501] - output$cum_treatments[1:500])
tb_deaths <- c(0, output$cum_tb_deaths[2:501] - output$cum_tb_deaths[1:500])
plot(incidence*100000/1000)
plot(treatments*100000/1000)
plot(tb_deaths*100000/1000)
tail(incidence*100)
tail(tb_deaths*100)
tail(output$Active*100)
tail(output$LTBI_early + output$LTBI_late + output$R)/1000
pars[["stabilization"]]
pars[["stabilization"]] <- 1.6
pars[["stabilization"]] <- 1.6
pars[["stabilization"]] <- 1/6
times <- seq(0, 500, by = 1) #runs the model for 500 years, computes annual output
#500 years is a long time, but we need our model to reach a steady state before we start simulating interventions
#6. Run the model
output <- ode(y = state, times = times, func = model, parms = pars)
#7. Analyze and visualize model output
output <- as.data.frame(output) #this puts output into an easy-to-manipulate format
#View(output)
tail(output)
plot(output$Active)
incidence <- c(0, output$cum_cases[2:501] - output$cum_cases[1:500])
treatments <- c(0, output$cum_treatments[2:501] - output$cum_treatments[1:500])
tb_deaths <- c(0, output$cum_tb_deaths[2:501] - output$cum_tb_deaths[1:500])
plot(incidence*100000/1000)
plot(treatments*100000/1000)
plot(tb_deaths*100000/1000)
tail(incidence*100)
tail(tb_deaths*100)
tail(output$Active*100)
tail(output$LTBI_early + output$LTBI_late + output$R)/1000
#4. Define model parameters (as a list or vector) - all as annual rates
# Eventually we will calibrate most of these parameters
# For now, we'll use placeholder values
pars <- c("die_tb"=0.15, #TB mortality rate - approximately equals case fatality ratio
"die"=1/63, #background mortality rate - equal to 1 over life expectancy
"beta"=4.5, #effective contact rate (also known as transmission rate) - rate of infection among susceptibles per person with active TB
"progress_early"=0.1, #annual rate of progression from early latent to active
"progress_late"=0.001, #annual rate of progression from late latent to active
"stabilization"=1/5, #rate of transition from early to late latent - 1 over duration of early latent
"protection"=0.5, #relative risk of reinfection (from late latent or recovered) vs. primary infection
"cure_tx"=0.7, #treatment rate - approximately equals product of case detection ratio and treatment success ratio
"cure_sp"=0.1 #spontaneous resolution rate
)
pars[["protection"]] <- 1
times <- seq(0, 500, by = 1) #runs the model for 500 years, computes annual output
#500 years is a long time, but we need our model to reach a steady state before we start simulating interventions
#6. Run the model
output <- ode(y = state, times = times, func = model, parms = pars)
#7. Analyze and visualize model output
output <- as.data.frame(output) #this puts output into an easy-to-manipulate format
#View(output)
tail(output)
plot(output$Active)
incidence <- c(0, output$cum_cases[2:501] - output$cum_cases[1:500])
treatments <- c(0, output$cum_treatments[2:501] - output$cum_treatments[1:500])
tb_deaths <- c(0, output$cum_tb_deaths[2:501] - output$cum_tb_deaths[1:500])
plot(incidence*100000/1000)
plot(treatments*100000/1000)
plot(tb_deaths*100000/1000)
tail(incidence*100)
tail(tb_deaths*100)
tail(output$Active*100)
tail(output$LTBI_early + output$LTBI_late + output$R)/1000
pars[["protection"]]
pars[["protection"]] <- 0
times <- seq(0, 500, by = 1) #runs the model for 500 years, computes annual output
#500 years is a long time, but we need our model to reach a steady state before we start simulating interventions
#6. Run the model
output <- ode(y = state, times = times, func = model, parms = pars)
#7. Analyze and visualize model output
output <- as.data.frame(output) #this puts output into an easy-to-manipulate format
#View(output)
tail(output)
plot(output$Active)
incidence <- c(0, output$cum_cases[2:501] - output$cum_cases[1:500])
treatments <- c(0, output$cum_treatments[2:501] - output$cum_treatments[1:500])
tb_deaths <- c(0, output$cum_tb_deaths[2:501] - output$cum_tb_deaths[1:500])
plot(incidence*100000/1000)
plot(treatments*100000/1000)
plot(tb_deaths*100000/1000)
tail(incidence*100)
tail(tb_deaths*100)
tail(output$Active*100)
tail(output$LTBI_early + output$LTBI_late + output$R)/1000
#4. Define model parameters (as a list or vector) - all as annual rates
# Eventually we will calibrate most of these parameters
# For now, we'll use placeholder values
pars <- c("die_tb"=0.15, #TB mortality rate - approximately equals case fatality ratio
"die"=1/63, #background mortality rate - equal to 1 over life expectancy
"beta"=4.5, #effective contact rate (also known as transmission rate) - rate of infection among susceptibles per person with active TB
"progress_early"=0.1, #annual rate of progression from early latent to active
"progress_late"=0.001, #annual rate of progression from late latent to active
"stabilization"=1/5, #rate of transition from early to late latent - 1 over duration of early latent
"protection"=0.5, #relative risk of reinfection (from late latent or recovered) vs. primary infection
"cure_tx"=0.7, #treatment rate - approximately equals product of case detection ratio and treatment success ratio
"cure_sp"=0.1 #spontaneous resolution rate
)
pars[["cure_tx"]] <- 0
times <- seq(0, 500, by = 1) #runs the model for 500 years, computes annual output
#500 years is a long time, but we need our model to reach a steady state before we start simulating interventions
#6. Run the model
output <- ode(y = state, times = times, func = model, parms = pars)
#7. Analyze and visualize model output
output <- as.data.frame(output) #this puts output into an easy-to-manipulate format
#View(output)
tail(output)
plot(output$Active)
incidence <- c(0, output$cum_cases[2:501] - output$cum_cases[1:500])
treatments <- c(0, output$cum_treatments[2:501] - output$cum_treatments[1:500])
tb_deaths <- c(0, output$cum_tb_deaths[2:501] - output$cum_tb_deaths[1:500])
plot(incidence*100000/1000)
plot(treatments*100000/1000)
plot(tb_deaths*100000/1000)
tail(incidence*100)
tail(tb_deaths*100)
tail(output$Active*100)
tail(output$LTBI_early + output$LTBI_late + output$R)/1000
pars[["cure_tx"]]
pars[["cure_tx"]] <- 0.9
times <- seq(0, 500, by = 1) #runs the model for 500 years, computes annual output
#500 years is a long time, but we need our model to reach a steady state before we start simulating interventions
#6. Run the model
output <- ode(y = state, times = times, func = model, parms = pars)
#7. Analyze and visualize model output
output <- as.data.frame(output) #this puts output into an easy-to-manipulate format
#View(output)
tail(output)
plot(output$Active)
incidence <- c(0, output$cum_cases[2:501] - output$cum_cases[1:500])
treatments <- c(0, output$cum_treatments[2:501] - output$cum_treatments[1:500])
tb_deaths <- c(0, output$cum_tb_deaths[2:501] - output$cum_tb_deaths[1:500])
plot(incidence*100000/1000)
plot(treatments*100000/1000)
plot(tb_deaths*100000/1000)
tail(incidence*100)
tail(tb_deaths*100)
tail(output$Active*100)
tail(output$LTBI_early + output$LTBI_late + output$R)/1000
pars[["cure_tx"]] <- 0.5
times <- seq(0, 500, by = 1) #runs the model for 500 years, computes annual output
#500 years is a long time, but we need our model to reach a steady state before we start simulating interventions
#6. Run the model
output <- ode(y = state, times = times, func = model, parms = pars)
#7. Analyze and visualize model output
output <- as.data.frame(output) #this puts output into an easy-to-manipulate format
#View(output)
tail(output)
plot(output$Active)
incidence <- c(0, output$cum_cases[2:501] - output$cum_cases[1:500])
treatments <- c(0, output$cum_treatments[2:501] - output$cum_treatments[1:500])
tb_deaths <- c(0, output$cum_tb_deaths[2:501] - output$cum_tb_deaths[1:500])
plot(incidence*100000/1000)
plot(treatments*100000/1000)
plot(tb_deaths*100000/1000)
tail(incidence*100)
tail(tb_deaths*100)
tail(output$Active*100)
tail(output$LTBI_early + output$LTBI_late + output$R)/1000
pars <- c("die_tb"=0.2, #TB mortality rate - approximately equals case fatality ratio
"die"=1/63, #background mortality rate - equal to 1 over life expectancy
"beta"=4.5, #effective contact rate (also known as transmission rate) - rate of infection among susceptibles per person with active TB
"progress_early"=0.1, #annual rate of progression from early latent to active
"progress_late"=0.001, #annual rate of progression from late latent to active
"stabilization"=1/5, #rate of transition from early to late latent - 1 over duration of early latent
"protection"=0.5, #relative risk of reinfection (from late latent or recovered) vs. primary infection
"cure_tx"=0.7, #treatment rate - approximately equals product of case detection ratio and treatment success ratio
"cure_sp"=0.1 #spontaneous resolution rate
)
#5. Also define the model timestep and number of timesteps to run
#If we wanted annual output, use a timestep of 1
#If we wanted monthly output, use a timestep of 1/12, etc.
times <- seq(0, 500, by = 1) #runs the model for 500 years, computes annual output
#500 years is a long time, but we need our model to reach a steady state before we start simulating interventions
#6. Run the model
output <- ode(y = state, times = times, func = model, parms = pars)
#7. Analyze and visualize model output
output <- as.data.frame(output) #this puts output into an easy-to-manipulate format
#View(output)
tail(output)
plot(output$Active)
incidence <- c(0, output$cum_cases[2:501] - output$cum_cases[1:500])
treatments <- c(0, output$cum_treatments[2:501] - output$cum_treatments[1:500])
tb_deaths <- c(0, output$cum_tb_deaths[2:501] - output$cum_tb_deaths[1:500])
plot(incidence*100000/1000)
plot(treatments*100000/1000)
plot(tb_deaths*100000/1000)
tail(incidence*100)
tail(tb_deaths*100)
tail(output$Active*100)
tail(output$LTBI_early + output$LTBI_late + output$R)/1000
